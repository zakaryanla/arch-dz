{
	"info": {
		"_postman_id": "3fcdf94a-fd64-40ad-8894-e2a6980b268b",
		"name": "Arch.dz7",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37766344"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "Get admin token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(pm.response.text());\r",
									"pm.collectionVariables.set(\"tokenAdmin\", jsonData[\"access_token\"]);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "crud",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								},
								{
									"key": "username",
									"value": "crud",
									"type": "text"
								},
								{
									"key": "password",
									"value": "sadsfASdcsdf",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "Y9BkXRzSKdKbVqaC07nBUgJpOJbVZu4t",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://arch-kk.homework/realms/app/protocol/openid-connect/token",
							"protocol": "http",
							"host": [
								"arch-kk",
								"homework"
							],
							"path": [
								"realms",
								"app",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "User registration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var username1 = pm.variables.replaceIn('{{$randomUserName}}')\r",
									"var password1 =  pm.variables.replaceIn('{{$randomPassword}}')\r",
									"\r",
									"var firstName = pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"var lastName =  pm.variables.replaceIn('{{$randomLastName}}')\r",
									"\r",
									"pm.collectionVariables.set(\"username1\", username1)\r",
									"pm.collectionVariables.set(\"password1\", password1)\r",
									"\r",
									"pm.collectionVariables.set(\"firstName\", firstName)\r",
									"pm.collectionVariables.set(\"lastName\", lastName)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Зарегистрирован: \" + pm.collectionVariables.get('lastName') + \" \" + pm.collectionVariables.get('firstName'), function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tokenAdmin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username1}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"enabled\": true,\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"credentials\": [{\r\n    \"type\": \"password\",\r\n    \"value\": \"{{password1}}\"\r\n  }],\r\n  \"attributes\": {\r\n    \"phone\": \"{{$randomPhoneNumber}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arch-kk.homework/admin/realms/app/users",
							"protocol": "http",
							"host": [
								"arch-kk",
								"homework"
							],
							"path": [
								"admin",
								"realms",
								"app",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token1\", jsonData[\"access_token\"]);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Зашел: \" + pm.collectionVariables.get('lastName') + \" \" + pm.collectionVariables.get('firstName'), function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "oauth2proxy",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{username1}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password1}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "kBC3EGK3dLM2Uk7U6jY94grKtnMMqWi7",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://arch-kk.homework/realms/app/protocol/openid-connect/token",
							"protocol": "http",
							"host": [
								"arch-kk",
								"homework"
							],
							"path": [
								"realms",
								"app",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверяем баланс (0)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + pm.response.text(), function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"sum\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}billing/check",
							"host": [
								"{{baseUrl}}billing"
							],
							"path": [
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "Пополняем кошелек на 10000",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Запрос: \" + pm.request.body, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"sum\": 10000}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/billing/change",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"change"
							]
						}
					},
					"response": []
				},
				{
					"name": "Делаем покупку на 100",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Запрос: \" + pm.request.body, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"});\r",
									"\r",
									"setTimeout(() => {}, 5000); \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"product\": \"{{$randomProduct}}\", \"sum\": 100}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}order/buy",
							"host": [
								"{{baseUrl}}order"
							],
							"path": [
								"buy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверяем баланс (изменился)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"sum\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}billing/check",
							"host": [
								"{{baseUrl}}billing"
							],
							"path": [
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка нотификаций (1 уведомление)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"text\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}notifications/list",
							"host": [
								"{{baseUrl}}notifications"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Делаем покупку на 99999",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Запрос: \" + pm.request.body, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"NOOK\");\r",
									"});\r",
									"\r",
									"setTimeout(() => {}, 5000); \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"product\": \"{{$randomProduct}}\", \"sum\": 99999}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}order/buy",
							"host": [
								"{{baseUrl}}order"
							],
							"path": [
								"buy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверяем баланс (не изменился)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"sum\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}billing/check",
							"host": [
								"{{baseUrl}}billing"
							],
							"path": [
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка нотификаций (2 уведомления)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Ответ: \" + responseBody, function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"text\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token1}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}notifications/list",
							"host": [
								"{{baseUrl}}notifications"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://arch.homework/api/v1/"
		},
		{
			"key": "username1",
			"value": ""
		},
		{
			"key": "password1",
			"value": ""
		},
		{
			"key": "token1",
			"value": ""
		},
		{
			"key": "userid1",
			"value": ""
		},
		{
			"key": "userid2",
			"value": ""
		},
		{
			"key": "tokenAdmin",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		}
	]
}